package leetcode

import "testing"

func TestFractionToDecimal(t *testing.T) {
	n, d := 1, 2
	if r := fractionToDecimal(n, d); r != "0.5" {
		t.Fatalf("expect 0.5 get %s", r)
	}

	n, d = 2, 1
	if r := fractionToDecimal(n, d); r != "2" {
		t.Fatalf("expect 2 get %s", r)
	}

	n, d = 4, 333
	if r := fractionToDecimal(n, d); r != "0.(012)" {
		t.Fatalf("expect 0.(012) get %s", r)
	}
	n, d = 597, 31325
	a := "0.01(905826017557861133280127693535514764565043894652833200319233838786911412609736632083000798084596967278531524341580207501995211492418196328810853950518754988028731045490822027134876296887470071827613727055067837190742218675179569034317637669592976855546687948922585794094173982442138866719872306464485235434956105347166799680766161213088587390263367916999201915403032721468475658419792498004788507581803671189146049481245011971268954509177972865123703112529928172386272944932162809257781324820430965682362330407023144453312051077414205)"
	if r := fractionToDecimal(n, d); r != a {
		t.Fatalf("expect %s get %s", a, r)
	}
	n, d = 1, 6
	if r := fractionToDecimal(n, d); r != "0.1(6)" {
		t.Fatalf("expect 0.1(6) get %s", r)
	}
}
